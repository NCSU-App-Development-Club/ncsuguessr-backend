name: Push Docker image and update AWS deployment

on:
  push:
    branches: ['main', 'staging']

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker Tag
        id: set-tag
        run: echo "tag=${{ github.ref_name == 'main' && 'prod' || 'staging' }}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/ncsu-app-development-club/ncsuguessr-backend:${{ env.tag }}

  redeploy:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' # TODO: remove this once prod is ready
    needs: build-and-push
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Determine deployment environment
        run: echo "DEPLOY_ENV=${{ github.ref_name == 'main' && 'prod' || 'staging' }}" >> $GITHUB_ENV

      - name: Force ECS Service Redeployment
        run: |
          aws ecs update-service \
            --cluster ncsuguessr-BackendCluster-${{ env.DEPLOY_ENV }} \
            --service ncsuguessr-BackendService-${{ env.DEPLOY_ENV }} \
            --force-new-deployment
